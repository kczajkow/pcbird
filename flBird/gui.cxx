// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "gui.h"
#include <FL/fl_ask.H>
#include "flbird.h"
#include "birdclient.h"
#include <FL/Fl_Text_Buffer.H>

Fl_Double_Window *mainwnd=(Fl_Double_Window *)0;

Fl_Input *hostbox=(Fl_Input *)0;

Fl_Text_Display *resultbox=(Fl_Text_Display *)0;

Fl_Spinner *portbox=(Fl_Spinner *)0;

Fl_Light_Button *plotbtn=(Fl_Light_Button *)0;

static void cb_plotbtn(Fl_Light_Button*, void*) {
  plot_cb();
}

Fl_Light_Button *streambtn=(Fl_Light_Button *)0;

static void cb_streambtn(Fl_Light_Button*, void*) {
  streaming_cb();
}

Fl_Button *singlebtn=(Fl_Button *)0;

static void cb_singlebtn(Fl_Button*, void*) {
  single_cb();
}

Fl_Light_Button *connectbtn=(Fl_Light_Button *)0;

static void cb_connectbtn(Fl_Light_Button*, void*) {
  connect_cb();
}

Fl_Button *quitbt=(Fl_Button *)0;

static void cb_quitbt(Fl_Button*, void*) {
  exit_cb();
}

Fl_Button *savebtn=(Fl_Button *)0;

static void cb_savebtn(Fl_Button*, void*) {
  save_cb();
}

Fl_Button *clearbtn=(Fl_Button *)0;

static void cb_clearbtn(Fl_Button*, void*) {
  clear_cb();
}

Fl_Button *infobtn=(Fl_Button *)0;

static void cb_infobtn(Fl_Button*, void* v) {
  fl_message("flBird v.0.1 by Bartosz Bielawski 2008\nThis program is a client to pcBIRD server written by T.Wlostowski. Both programs written for ISR course.");
}

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mainwnd = new Fl_Double_Window(655, 460, "flBird");
    w = o;
    { Fl_Input* o = hostbox = new Fl_Input(90, 15, 140, 25, "Hostname");
      hostbox->value("192.168.18.75");
    }
    { Fl_Text_Display* o = resultbox = new Fl_Text_Display(5, 94, 645, 355);
      Fl_Text_Buffer* tb = new Fl_Text_Buffer();
      resultbox->buffer(tb);
    }
    { Fl_Spinner* o = portbox = new Fl_Spinner(270, 15, 70, 25, "Port");
      portbox->value(DEFAULT_PORT);
      portbox->type(FL_INT_INPUT);
      portbox->range(1,65535);
    }
    { Fl_Light_Button* o = plotbtn = new Fl_Light_Button(175, 50, 70, 35, "Plot");
      o->callback((Fl_Callback*)cb_plotbtn);
    }
    { Fl_Light_Button* o = streambtn = new Fl_Light_Button(10, 50, 100, 35, "Streaming");
      o->callback((Fl_Callback*)cb_streambtn);
    }
    { Fl_Button* o = singlebtn = new Fl_Button(115, 50, 55, 35, "Single");
      o->callback((Fl_Callback*)cb_singlebtn);
    }
    { Fl_Light_Button* o = connectbtn = new Fl_Light_Button(255, 50, 85, 35, "Connect");
      o->callback((Fl_Callback*)cb_connectbtn);
    }
    { Fl_Button* o = quitbt = new Fl_Button(540, 10, 105, 75, "Quit");
      o->callback((Fl_Callback*)cb_quitbt);
    }
    { Fl_Button* o = savebtn = new Fl_Button(455, 50, 70, 35, "Save");
      o->callback((Fl_Callback*)cb_savebtn);
    }
    { Fl_Button* o = clearbtn = new Fl_Button(370, 50, 75, 35, "Clear");
      o->callback((Fl_Callback*)cb_clearbtn);
    }
    { Fl_Button* o = infobtn = new Fl_Button(370, 10, 155, 35, "About");
      o->callback((Fl_Callback*)cb_infobtn);
    }
    o->end();
  }
  return w;
}
